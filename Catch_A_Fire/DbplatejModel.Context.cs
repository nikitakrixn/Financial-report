//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Catch_A_Fire
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Platej_Entity : DbContext
    {
        public Platej_Entity()
            : base("name=Platej_Entity")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Category> Category { get; set; }
        public virtual DbSet<Paymont> Paymont { get; set; }
        public virtual DbSet<Users> Users { get; set; }
    
        public virtual int Category_Delete(Nullable<int> id_category)
        {
            var id_categoryParameter = id_category.HasValue ?
                new ObjectParameter("id_category", id_category) :
                new ObjectParameter("id_category", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Category_Delete", id_categoryParameter);
        }
    
        public virtual int Category_Insert(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Category_Insert", nameParameter);
        }
    
        public virtual ObjectResult<Category_Select_Result> Category_Select(Nullable<int> id_category)
        {
            var id_categoryParameter = id_category.HasValue ?
                new ObjectParameter("id_category", id_category) :
                new ObjectParameter("id_category", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Category_Select_Result>("Category_Select", id_categoryParameter);
        }
    
        public virtual int Category_Update(Nullable<int> id_category, string name)
        {
            var id_categoryParameter = id_category.HasValue ?
                new ObjectParameter("id_category", id_category) :
                new ObjectParameter("id_category", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Category_Update", id_categoryParameter, nameParameter);
        }
    
        public virtual int Paymount_Delete(Nullable<int> id_platej)
        {
            var id_platejParameter = id_platej.HasValue ?
                new ObjectParameter("id_platej", id_platej) :
                new ObjectParameter("id_platej", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Paymount_Delete", id_platejParameter);
        }
    
        public virtual int Paymount_Insert(string name, Nullable<int> kolvo, Nullable<double> price, Nullable<int> id_user, Nullable<int> id_category)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var kolvoParameter = kolvo.HasValue ?
                new ObjectParameter("Kolvo", kolvo) :
                new ObjectParameter("Kolvo", typeof(int));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(double));
    
            var id_userParameter = id_user.HasValue ?
                new ObjectParameter("id_user", id_user) :
                new ObjectParameter("id_user", typeof(int));
    
            var id_categoryParameter = id_category.HasValue ?
                new ObjectParameter("id_category", id_category) :
                new ObjectParameter("id_category", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Paymount_Insert", nameParameter, kolvoParameter, priceParameter, id_userParameter, id_categoryParameter);
        }
    
        public virtual ObjectResult<Paymount_Select_Result> Paymount_Select(Nullable<int> id_user)
        {
            var id_userParameter = id_user.HasValue ?
                new ObjectParameter("id_user", id_user) :
                new ObjectParameter("id_user", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Paymount_Select_Result>("Paymount_Select", id_userParameter);
        }
    
        public virtual int Paymount_Update(Nullable<int> id_platej, string name, Nullable<int> kolvo, Nullable<double> price, Nullable<double> cost, Nullable<System.DateTime> date, Nullable<int> id_user, Nullable<int> id_category)
        {
            var id_platejParameter = id_platej.HasValue ?
                new ObjectParameter("id_platej", id_platej) :
                new ObjectParameter("id_platej", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var kolvoParameter = kolvo.HasValue ?
                new ObjectParameter("Kolvo", kolvo) :
                new ObjectParameter("Kolvo", typeof(int));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(double));
    
            var costParameter = cost.HasValue ?
                new ObjectParameter("Cost", cost) :
                new ObjectParameter("Cost", typeof(double));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var id_userParameter = id_user.HasValue ?
                new ObjectParameter("id_user", id_user) :
                new ObjectParameter("id_user", typeof(int));
    
            var id_categoryParameter = id_category.HasValue ?
                new ObjectParameter("id_category", id_category) :
                new ObjectParameter("id_category", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Paymount_Update", id_platejParameter, nameParameter, kolvoParameter, priceParameter, costParameter, dateParameter, id_userParameter, id_categoryParameter);
        }
    
        public virtual ObjectResult<string> Users_Select()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Users_Select");
        }
    
        public virtual int Users_Update(Nullable<int> id_user, string password, Nullable<int> pin_kod)
        {
            var id_userParameter = id_user.HasValue ?
                new ObjectParameter("id_user", id_user) :
                new ObjectParameter("id_user", typeof(int));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var pin_kodParameter = pin_kod.HasValue ?
                new ObjectParameter("Pin_kod", pin_kod) :
                new ObjectParameter("Pin_kod", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Users_Update", id_userParameter, passwordParameter, pin_kodParameter);
        }
    
        public virtual ObjectResult<Paymount_Search_Result> Paymount_Search(Nullable<int> id_user, Nullable<int> id_category)
        {
            var id_userParameter = id_user.HasValue ?
                new ObjectParameter("id_user", id_user) :
                new ObjectParameter("id_user", typeof(int));
    
            var id_categoryParameter = id_category.HasValue ?
                new ObjectParameter("id_category", id_category) :
                new ObjectParameter("id_category", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Paymount_Search_Result>("Paymount_Search", id_userParameter, id_categoryParameter);
        }
    
        public virtual ObjectResult<Paymount_Period_Result> Paymount_Period(Nullable<int> id_user, Nullable<System.DateTime> sPeriod, Nullable<System.DateTime> ePeriod)
        {
            var id_userParameter = id_user.HasValue ?
                new ObjectParameter("id_user", id_user) :
                new ObjectParameter("id_user", typeof(int));
    
            var sPeriodParameter = sPeriod.HasValue ?
                new ObjectParameter("sPeriod", sPeriod) :
                new ObjectParameter("sPeriod", typeof(System.DateTime));
    
            var ePeriodParameter = ePeriod.HasValue ?
                new ObjectParameter("ePeriod", ePeriod) :
                new ObjectParameter("ePeriod", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Paymount_Period_Result>("Paymount_Period", id_userParameter, sPeriodParameter, ePeriodParameter);
        }
    
        public virtual ObjectResult<Paymount_Full_Search_Result> Paymount_Full_Search(Nullable<int> id_user, Nullable<int> id_category, Nullable<System.DateTime> sPeriod, Nullable<System.DateTime> ePeriod)
        {
            var id_userParameter = id_user.HasValue ?
                new ObjectParameter("id_user", id_user) :
                new ObjectParameter("id_user", typeof(int));
    
            var id_categoryParameter = id_category.HasValue ?
                new ObjectParameter("id_category", id_category) :
                new ObjectParameter("id_category", typeof(int));
    
            var sPeriodParameter = sPeriod.HasValue ?
                new ObjectParameter("sPeriod", sPeriod) :
                new ObjectParameter("sPeriod", typeof(System.DateTime));
    
            var ePeriodParameter = ePeriod.HasValue ?
                new ObjectParameter("ePeriod", ePeriod) :
                new ObjectParameter("ePeriod", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Paymount_Full_Search_Result>("Paymount_Full_Search", id_userParameter, id_categoryParameter, sPeriodParameter, ePeriodParameter);
        }
    
        public virtual int Users_Insert(string login, string password, string fIO, Nullable<int> pin_Code)
        {
            var loginParameter = login != null ?
                new ObjectParameter("Login", login) :
                new ObjectParameter("Login", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var fIOParameter = fIO != null ?
                new ObjectParameter("FIO", fIO) :
                new ObjectParameter("FIO", typeof(string));
    
            var pin_CodeParameter = pin_Code.HasValue ?
                new ObjectParameter("Pin_Code", pin_Code) :
                new ObjectParameter("Pin_Code", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Users_Insert", loginParameter, passwordParameter, fIOParameter, pin_CodeParameter);
        }
    }
}
